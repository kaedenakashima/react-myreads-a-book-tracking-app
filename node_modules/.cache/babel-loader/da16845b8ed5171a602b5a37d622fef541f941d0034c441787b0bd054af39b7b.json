{"ast":null,"code":"let token = localStorage.token;\nif (!token) token = Math.random().toString(36).substr(-8);\nconst url = process.env.REACT_APP_BOOK_API_KEY;\nconst options = {\n  headers: {\n    'content-type': 'application/json',\n    Accept: 'application/json',\n    Authorization: token\n  }\n};\nexport const get = bookId => fetch(`${url}/books/${bookId}`, options).then(res => res.json()).then(x => x.book);\nexport const getAll = () => fetch(`${url}/books`, options).then(res => res.json()).then(x => x.books);\nexport const update = (book, shelf) => fetch(`${url}/books/${book.id}`, {\n  method: 'PUT',\n  ...options,\n  body: JSON.stringify({\n    shelf\n  })\n}).then(res => res.json());\nexport const search = query => fetch(`${url}/search`, {\n  method: 'POST',\n  ...options,\n  body: JSON.stringify({\n    query\n  })\n}).then(res => res.json()).then(x => x.books);","map":{"version":3,"names":["token","localStorage","Math","random","toString","substr","url","process","env","REACT_APP_BOOK_API_KEY","options","headers","Accept","Authorization","get","bookId","fetch","then","res","json","x","book","getAll","books","update","shelf","id","method","body","JSON","stringify","search","query"],"sources":["/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/udacity_react_course-git-all/react_original_frontend_book_2ndsubmit/src/BookData.js"],"sourcesContent":["let token = localStorage.token\nif(!token) \n  token = Math.random().toString(36).substr(-8)\nconst url = process.env.REACT_APP_BOOK_API_KEY\nconst options = {\n    headers:{\n        'content-type':'application/json',\n        Accept:'application/json',\n        Authorization: token\n    }\n}\nexport const get = bookId => \n    fetch(`${url}/books/${bookId}`, options)\n    .then(res=> res.json())\n    .then(x=> x.book)\nexport const getAll = () => \n    fetch(`${url}/books`, options)\n    .then(res => res.json())\n    .then(x => x.books)\nexport const update = (book, shelf) => \n    fetch(`${url}/books/${book.id}`, {\n        method: 'PUT',\n        ...options,\n        body: JSON.stringify({shelf})\n    }).then(res=>res.json())\nexport const search = query => \n    fetch(`${url}/search`,{\n        method:'POST',\n        ...options,\n        body:JSON.stringify({query})\n    })\n    .then(res=> res.json())\n    .then(x=> x.books)\n\n\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,YAAY,CAACD,KAAK;AAC9B,IAAG,CAACA,KAAK,EACPA,KAAK,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/C,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAC9C,MAAMC,OAAO,GAAG;EACZC,OAAO,EAAC;IACJ,cAAc,EAAC,kBAAkB;IACjCC,MAAM,EAAC,kBAAkB;IACzBC,aAAa,EAAEb;EACnB;AACJ,CAAC;AACD,OAAO,MAAMc,GAAG,GAAGC,MAAM,IACrBC,KAAK,CAAE,GAAEV,GAAI,UAASS,MAAO,EAAC,EAAEL,OAAO,CAAC,CACvCO,IAAI,CAACC,GAAG,IAAGA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACtBF,IAAI,CAACG,CAAC,IAAGA,CAAC,CAACC,IAAI,CAAC;AACrB,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAClBN,KAAK,CAAE,GAAEV,GAAI,QAAO,EAAEI,OAAO,CAAC,CAC7BO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,CAAC,IAAIA,CAAC,CAACG,KAAK,CAAC;AACvB,OAAO,MAAMC,MAAM,GAAGA,CAACH,IAAI,EAAEI,KAAK,KAC9BT,KAAK,CAAE,GAAEV,GAAI,UAASe,IAAI,CAACK,EAAG,EAAC,EAAE;EAC7BC,MAAM,EAAE,KAAK;EACb,GAAGjB,OAAO;EACVkB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IAACL;EAAK,CAAC;AAChC,CAAC,CAAC,CAACR,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;AAC5B,OAAO,MAAMY,MAAM,GAAGC,KAAK,IACvBhB,KAAK,CAAE,GAAEV,GAAI,SAAQ,EAAC;EAClBqB,MAAM,EAAC,MAAM;EACb,GAAGjB,OAAO;EACVkB,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;IAACE;EAAK,CAAC;AAC/B,CAAC,CAAC,CACDf,IAAI,CAACC,GAAG,IAAGA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACtBF,IAAI,CAACG,CAAC,IAAGA,CAAC,CAACG,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}