[{"/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/index.js":"1","/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookData.js":"2","/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookListPage.js":"3","/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookSearchPage.js":"4","/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookLayout.js":"5"},{"size":2658,"mtime":1691225950349,"results":"6","hashOfConfig":"7"},{"size":916,"mtime":1689624259923,"results":"8","hashOfConfig":"7"},{"size":2131,"mtime":1689624259929,"results":"9","hashOfConfig":"7"},{"size":1408,"mtime":1689624259932,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1689624259927,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13ko4lx",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/index.js",[],[],"/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookData.js",[],[],[],"/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookListPage.js",["29"],[],"import React, {useState} from 'react'\nimport BookLayout from './BookLayout'\nexport function BookCollection(props) {\n    const [shelfTtls, setShelfTtls] = useState([\n      {key:'currentlyReading', name:'Currently Reading'},\n      {key: 'read', name:'Read'},\n      {key: 'wantToRead', name: 'Want to Read'}\n    ])\n    return(\n    <div>\n    {shelfTtls.map(x=> (\n        <BookList\n          key={x.key}\n          shelf={x}\n          books={props.books}\n          onChange3Shelf={props.onChange3Shelf}\n        />\n      ))}\n    </div>\n    )\n  }\nexport function BookList(props){\n    const selectedBooks = props.books.filter(x=>x.shelf === props.shelf.key)\n    return (\n      <BookLayout title={props.shelf.name}>\n        {selectedBooks.map(x=> (\n          <BookItem \n            key={x.id}\n            book={x}\n            shelf={props.shelf.key}\n            onChange3Shelf={props.onChange3Shelf}\n          />\n        ))}\n      </BookLayout>\n    )\n  }\nexport function BookItem(props) {\n    const [value, setValue] = useState(props.shelf)\n    const onChange2Shelf = e => {\n      setValue(e.target.value)\n      props.onChange3Shelf(props.book, e.target.value)\n    }\n      return (\n        <div style={{ width: '129px', fontSize:'12px'}}>\n        <div\n          style={{\n            backgroundImage: `url(${props.book.imageLinks && props.book.imageLinks.thumbnail})`,\n            width: '82px',\n            height: '119px',\n            marginBottom: '8px',\n            backgroundSize: 'contain'\n          }}\n        />\n        <div style={{display:'flex',justifyContent: 'space-between'}}>\n        <b>{props.book.title}</b>\n        <div className='dot-btn'>\n        <select value={value} onChange={onChange2Shelf}>\n          <option value='move' disabled>Move to...</option>\n          <option value='currentlyReading'>Currently Reading</option>\n          <option value='read'>Read</option>\n          <option value='wantToRead'>Want to Read</option>\n          <option value='none'>None</option>\n        </select>\n        </div>\n        </div>\n        <div>{props.book.authors && props.book.authors.join(', ')}</div>\n        </div>\n      )\n  }","/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookSearchPage.js",[],[],"/Users/kaedenakashima/Desktop/CODE/tutorial/react/udacity_react_course/MyReads_A_Book_Tracking_App/src/BookLayout.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":4,"column":23,"nodeType":"32","messageId":"33","endLine":4,"endColumn":35},"no-unused-vars","'setShelfTtls' is assigned a value but never used.","Identifier","unusedVar"]